{"version":3,"sources":["components/Header.jsx","components/InputMovieTitle.jsx","components/Badge.jsx","components/Badges.jsx","components/Button.jsx","components/Form.jsx","components/Loader.jsx","components/RecommendedMovies.jsx","components/ScrollArrow.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","InputMovieTitle","setInputText","setMovieBadge","inputText","movieBadge","className","onChange","e","target","value","type","placeholder","onClick","preventDefault","console","log","input","completed","id","Math","random","Badge","movie","key","filter","el","Badges","map","Button","setSuggestions","setLoader","setErrMessage","setShowAlert","movies","axios","defaults","baseURL","length","push","get","params","k","info","q","join","then","res","data","Similar","Results","catch","err","SelectBox","useState","Loader","RecommendedMovies","suggestions","item","hidden","y","opacity","visible","div","variants","scale","transition","delay","when","staggerChildren","initial","animate","yID","Name","wTeaser","href","yUrl","rel","ScrollArrow","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","style","height","display","App","loader","showAlert","errMessage","layout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.df6a57c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/title.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <h1>Movie Recommendation</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InputMovieTitle({\r\n  setInputText,\r\n  setMovieBadge,\r\n  inputText,\r\n  movieBadge,\r\n}) {\r\n  function handleInputText(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText === \"\") {\r\n      console.log(\"error\");\r\n    } else {\r\n      setMovieBadge([\r\n        ...movieBadge,\r\n        { input: inputText, completed: false, id: Math.random() * 1000 },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center\">\r\n        <input\r\n          onChange={handleInputText}\r\n          type=\"text\"\r\n          placeholder=\"Title of the movie\"\r\n        />\r\n        <button onClick={handleSubmit} className=\"add-movie\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Badge({ movie, movieBadge, setMovieBadge }) {\r\n  const deleteBadge = () => {\r\n    setMovieBadge(movieBadge.filter((el) => el.id !== movie.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"badge\" key={movie.id}>\r\n        {movie.input}\r\n        <button className=\"add-btn\" onClick={deleteBadge}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Badge from \"./Badge\";\r\n\r\nexport default function Badges({ movieBadge, setMovieBadge }) {\r\n  return (\r\n    <div>\r\n      <div className=\"badges\">\r\n        {movieBadge.map((movie) => (\r\n          <Badge\r\n            movie={movie}\r\n            movieBadge={movieBadge}\r\n            setMovieBadge={setMovieBadge}\r\n            key={movie.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Button({\r\n  setMovieBadge,\r\n  movieBadge,\r\n  setSuggestions,\r\n  inputText,\r\n  setInputText,\r\n  setLoader,\r\n  setErrMessage,\r\n  setShowAlert,\r\n}) {\r\n  const key = \"387242-movierec-SFWC5SED\";\r\n  let movies = [];\r\n  axios.defaults.baseURL = \"https://tastedive.com\";\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowAlert(false);\r\n    if (inputText.length === 0 && movieBadge.length === 0) {\r\n      setShowAlert(true);\r\n      setErrMessage(\"the input text is empty\");\r\n      return;\r\n    }\r\n\r\n    setLoader(true);\r\n    movies.push(inputText);\r\n    movieBadge.map((movie) => {\r\n      movies.push(movie.input);\r\n    });\r\n\r\n    axios\r\n      .get(`/api/similar`, {\r\n        params: {\r\n          k: key,\r\n          type: \"movie\",\r\n          info: 1,\r\n          q: movies.join(),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.Similar.Results.length === 0) {\r\n          setLoader(false);\r\n          setShowAlert(true);\r\n          setErrMessage(\"The movie title you entered is incorrect\");\r\n          return;\r\n        }\r\n        setSuggestions(res.data.Similar.Results);\r\n        setLoader(false);\r\n        setMovieBadge([]);\r\n      })\r\n      .catch((err) => console.log(\"error\"));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center\">\r\n        <button onClick={handleSubmit} className=\"btn\">\r\n          submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport InputMovieTitle from \"./InputMovieTitle\";\r\nimport Badge from \"./Badges\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function SelectBox({\r\n  setSuggestions,\r\n  setLoader,\r\n  setErrMessage,\r\n  setShowAlert,\r\n}) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [movieBadge, setMovieBadge] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>input the movie title below</h2>\r\n      <InputMovieTitle\r\n        setInputText={setInputText}\r\n        setMovieBadge={setMovieBadge}\r\n        inputText={inputText}\r\n        movieBadge={movieBadge}\r\n      />\r\n      <Badge movieBadge={movieBadge} setMovieBadge={setMovieBadge} />\r\n      <Button\r\n        movieBadge={movieBadge}\r\n        setMovieBadge={setMovieBadge}\r\n        setSuggestions={setSuggestions}\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        setLoader={setLoader}\r\n        setErrMessage={setErrMessage}\r\n        setShowAlert={setShowAlert}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/loader.css\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"lds-default\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"../styles/cards.css\";\r\n\r\nexport default function RecommendedMovies({ suggestions }) {\r\n  const container = {\r\n    hidden: { opacity: 1, scale: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      transition: {\r\n        delay: 0.3,\r\n        when: \"beforeChildren\",\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={container}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      className=\"cards\"\r\n    >\r\n      {suggestions.map((movie) => (\r\n        <motion.div variants={item} key={movie.yID} className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">{movie.Name}</h4>\r\n            <p>{movie.wTeaser}</p>\r\n          </div>\r\n          <a\r\n            className=\"btn\"\r\n            href={movie.yUrl}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            trailer\r\n          </a>\r\n        </motion.div>\r\n      ))}\r\n    </motion.div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/scrolltop.css\";\r\n\r\nconst ScrollArrow = () => {\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const checkScrollTop = () => {\r\n    if (!showScroll && window.pageYOffset > 400) {\r\n      setShowScroll(true);\r\n    } else if (showScroll && window.pageYOffset <= 400) {\r\n      setShowScroll(false);\r\n    }\r\n  };\r\n\r\n  const scrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", checkScrollTop);\r\n\r\n  return (\r\n    <i\r\n      className=\"scrollTop fas fa-arrow-circle-up\"\r\n      onClick={scrollTop}\r\n      style={{ height: 40, display: showScroll ? \"flex\" : \"none\" }}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default ScrollArrow;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Loader from \"./components/Loader\";\nimport RecommendedMovies from \"./components/RecommendedMovies\";\nimport ScrollArrow from './components/ScrollArrow'\nimport { motion } from \"framer-motion\";\nimport './styles/alert.css'\n\nfunction App() {\n  const [suggestions, setSuggestions] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [errMessage, setErrMessage] = useState(\"\");\n\n  return (\n    <div>\n      <ScrollArrow/>\n      {showAlert && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.3 }}\n          className=\"alert alert-danger\"\n        >\n          {errMessage}\n          <i\n            onClick={() => setShowAlert(!showAlert)}\n            className=\"close far fa-window-close\"\n          ></i>\n        </motion.div>\n      )}\n\n      <motion.div layout className=\"header-container\">\n        <Header />\n        <Form\n          setSuggestions={setSuggestions}\n          setLoader={setLoader}\n          setErrMessage={setErrMessage}\n          setShowAlert={setShowAlert}\n        />\n      </motion.div>\n      {loader ? (\n        <Loader />\n      ) : (\n        <>\n          <div className=\"main-container\">\n            <RecommendedMovies suggestions={suggestions} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}